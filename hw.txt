JSON

 1. Создать внешний репозиторий c названием JSON.
--- в гитхабе открыть «Repositories», «New»

 2. Клонировать репозиторий JSON на локальный компьютер.  
 --- git clone https://github.com/vole4ka/JSON.git

 3. Внутри локального JSON создать файл “new.json”.
--- cat>new.json

 4. Добавить файл под гит.
--- git add new.json

 5. Закоммитить файл.
--- git commit -m “add new.json”

 6. Отправить файл на внешний GitHub репозиторий.
--- git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
--- vim new.json
            { "name": "Olia",
	"patronymic": "Leonidovna",
	"surname": "Radyvaniuk",
	"age": 32,
	"pets": null,
	"salary": 600}

 8. Отправить изменения на внешний репозиторий.
--- git add new.json
--- git commit -m “add inf. about me new.json”
--- git push

 9. Создать файл preferences.json
--- touch preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
---         vim preferences.json
              {"my_preferences": [
	{"film": "Harry_Potter"},
	{"series": "Trigger"},
	{"food":[ "pizza",
		"pancakes",
		"cutlets",
		"cake",
		"apple"]},
	{"season": "summer"},
	{"country": "Spain"} ]}

 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
--- touch skills.json
     vim skills.json
{"skills":[
	{"theory": ["тестирование",
		      "багрепорты",
		      "документация",
		      "направления_тестирования",
		      "SDLC",
	                    "STLS"]},
	{"server": ["серверная_архитектура",
			"методы_запросов",
			"ответы",
			"стуктуры_запросов-ответов"]},
	{"formats": ["JSON",
			"XML"]},
	{"programs": ["postman",
			"fiddler",
			"charles",
			"python"]},
	{"VPN": ["как работает",
			"зачем_нужен",
			"как_использовать",
			"варианты_инструментов"]},
	{"Dev_Tools": ["Google_Chrome",
			"FireFox"]},
	{"мобильное_тестирование": ["iOS",
			"Android"]},
	{"командная_строка": ["terminal",
			"linux",
			"bush"]},
	{"SQL": ["create",
			"delete",
			"drop",
			"insert_into",
			"select",
			"from",
			"join"]},
	{"other": ["Git",
			"Jmeter",
			"Scrum"]} ] }


 12. Отправить сразу 2 файла на внешний репозиторий.
--- git add . ; git commit -m “add my preferences.json, add skills.json”
--- git push

 13. На веб интерфейсе создать файл bug_report.json.
--- нажать «Add file», затем «Create new file»

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
--- “add bug_report.json”

 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
--- {"Bug report": [
    "Summary",
    "Steps_to_reproduce",
    "Actual result",
    "expected result"]}

 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
--- “changes bug_report.json”

 17. Синхронизировать внешний и локальный репозиторий JSON
--- git pull


